name: Release Automation

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., 2.0.2)'
        required: true
        type: string
      release_type:
        description: 'Release type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  prepare-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout main branch
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
      - name: Validate version format
        run: |
          if ! [[ "${{ inputs.version }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Error: Invalid version format. Use semantic versioning (e.g., 2.0.2)"
            exit 1
          fi
      
      - name: Update version numbers
        run: |
          chmod +x scripts/update-version.sh
          ./scripts/update-version.sh ${{ inputs.version }}
      
      - name: Update CHANGELOG placeholder
        run: |
          # Add a placeholder for manual CHANGELOG update
          sed -i "s/## \[${{ inputs.version }}\] - .*/## [${{ inputs.version }}] - $(date +%Y-%m-%d)/" CHANGELOG.md
          
          # Add release type marker
          case "${{ inputs.release_type }}" in
            major)
              sed -i "/## \[${{ inputs.version }}\]/a\\\\n### 🚀 Major Release" CHANGELOG.md
              ;;
            minor)
              sed -i "/## \[${{ inputs.version }}\]/a\\\\n### ✨ Minor Release" CHANGELOG.md
              ;;
            patch)
              sed -i "/## \[${{ inputs.version }}\]/a\\\\n### 🐛 Patch Release" CHANGELOG.md
              ;;
          esac
      
      - name: Create Pull Request
        id: create_pr
        uses: peter-evans/create-pull-request@v5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: "chore: prepare release v${{ inputs.version }}"
          title: "🚀 Prepare Release v${{ inputs.version }}"
          body: |
            ## 📦 Release Preparation for v${{ inputs.version }}
            
            This PR updates version numbers across all files and branches in preparation for the v${{ inputs.version }} release.
            
            ### ✅ Automated Updates
            - [x] VERSION file updated
            - [x] dotfiles-plus.sh version updated
            - [x] CLAUDE.md version references updated
            - [x] CHANGELOG.md template added
            - [x] gh-pages branch _config.yml updated
            - [x] homebrew-tap branch formula updated (version only)
            
            ### 📝 Manual Steps Required
            1. **Update CHANGELOG.md** with actual release notes
            2. Review all changes
            3. Merge this PR
            4. Create and push tag: `git tag -a v${{ inputs.version }} -m "Release v${{ inputs.version }}"`
            5. Create GitHub release
            6. Run SHA256 update workflow after release is published
            
            ### 🔍 Please verify:
            - [ ] Version numbers are correct
            - [ ] CHANGELOG entries are complete
            - [ ] All tests pass
            - [ ] Documentation is up to date
          branch: release/v${{ inputs.version }}
          delete-branch: true
      
      - name: Add PR comment with next steps
        if: steps.create_pr.outputs.pull-request-number
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: ${{ steps.create_pr.outputs.pull-request-number }},
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `## 🎯 Next Steps After Merging
              
              \`\`\`bash
              # 1. After merging, checkout main and pull
              git checkout main
              git pull origin main
              
              # 2. Create and push tag
              git tag -a v${{ inputs.version }} -m "Release v${{ inputs.version }}"
              git push origin v${{ inputs.version }}
              
              # 3. The tag push will trigger the release creation workflow
              \`\`\`
              
              Then wait for the release to be created and run the Homebrew SHA update workflow.`
            })

  create-release:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
      
      - name: Extract changelog
        id: changelog
        run: |
          # Extract the changelog for this version
          changelog=$(awk '/^## \['${{ steps.version.outputs.VERSION }}'\]/{flag=1; next} /^## \[/{flag=0} flag' CHANGELOG.md)
          
          # Handle multiline output
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$changelog" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      
      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release v${{ steps.version.outputs.VERSION }}
          body: |
            ## 🚀 Dotfiles Plus v${{ steps.version.outputs.VERSION }}
            
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ---
            
            ### 📦 Installation
            
            **Homebrew:**
            ```bash
            brew tap anivar/dotfiles-plus https://github.com/anivar/dotfiles-plus
            brew install dotfiles-plus
            ```
            
            **Quick Install:**
            ```bash
            curl -sSL https://raw.githubusercontent.com/anivar/dotfiles-plus/main/install.sh | bash
            ```
            
            ### 📚 Documentation
            - [Installation Guide](https://github.com/anivar/dotfiles-plus/blob/main/INSTALL.md)
            - [Command Reference](https://github.com/anivar/dotfiles-plus/blob/main/COMMANDS.md)
            - [Configuration](https://github.com/anivar/dotfiles-plus/blob/main/CONFIGURATION.md)
          draft: false
          prerelease: false